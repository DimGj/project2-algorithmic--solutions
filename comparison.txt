Συγκρίνοντας τα αποτελέσματα των 4 αλγορίθμων σε dataset μεγέθους 5000 εικόνων(τα αντίστοιχα output files βρίσκονται στο directory Outputs) μπορούμε να εξάγουμε κάποια συμπεράσματα.
Αρχικά παρατηρούμε πως οι αλγόριθμοι Locality-Sensitive-Hashing (LSH), Hypercube και Graph Nearest Neighbor Search(GNNS) είναι είναι πολύ πιο αποδοτικοί ως προς την αρχική κατασκευή
,όπου για αυτούς χρειάστηκε χρόνος μερικών δευτερολέπτων ,ενώ ο αλγόριθμος Monotonic-Relative-Neighborhood-Graph (MRNG) χρειάστηκε περίπου 1 ώρα και 15 λεπτά για την αρχικοποίηση του. 
Όμως παρατηρώντας τους χρόνους εκτέλεσης φαίνεται πως οι αλγόριθμοι βασισμένοι σε γράφους (GNNS,MRNG) είναι αρκετά πιο αποδοτικοί χρονικά ,παράγοντας παρόμοι ή και καλύτερα αποτελέσματα.
Ειδικότερα παρατηρώντας τους χρόνους του Hypercube βλέπουμε πως κυμαίνονται από 8.56632ms - 32.06ms με το Maximum-Approximation-Factor (MAF) να κυμαίνεται 1-1.25383.Τα αποτελέσματα αυτά είναι
ήδη αποδεκτά μιάς και γίνεται μια εξαιρετικά καλή προσέγγιση των πλησιέστερων γειτόνων ,σε χρόνους του 1/3 και παρακάτω από τον αλγόριθμο Brute Force.Παρατηρώντας τον αλγόριθμο LSH βλέπουμε 
καλύτερη χρονική απόδοση ,με χρόνους από 8.09473ms-15.5755ms ,που σίγουρα αποτελούν βελτίωση συγκριτικά με τους χρόνους του Hypercube ,και MAF από 1.00868-1.78787,το οποίο δείχνει μία απόκλιση
στον υπολογισμό των προσεγγιστικών αποστάσεων.Έπειτα ο αλγόριθμος GNNS ο οποίος χρησιμοποιεί τον αλγόριθμο LSH για την κατασκευή του γράφου έχει χρόνους 3.21178ms-5.92204ms,οι οποίοι είναι μία
σημαντική βελτίωση συγκριτικά και με τον Hypercube αλλά και με τον LSH,αφού ο χειρότερος χρόνος του GNNS είναι καλύτερος από τον καλύτερο χρόνο του LSH.Το MAF του GNNS κυμαίνεται στις τιμές
1-1.46173,το οποίο δείχνει μια βελτίωση σε σχέση με τον LSH αλλά μία απόκλιση από τον Hypercube.Τέλος ο αλγόριθμος MRNG έχει χρόνους 3.41332ms-6.30551ms και MAF 1 σε όλα τα query points.Αυτό
σημαίνει πρακτικά ότι χρονικά είναι ελάχιστα χειρότερος του GNNS (το οποίο μπορεί οφειλεται σε πολλαπλούς παράγοντες που να μην σχετίζονται με τον αλγόριθμο,όπως load του επεξεργαστή τη δεδομένη στιγμή)
και παράγει τις πραγματικές αποστάσεις των σημείων ως προς το query point,άρα βρίσκει και τους πραγματικούς πλησιέστερους γείτονες.Συγκρίνοντας και τους 4 αλγορίθμους φαίνονται πως όλοι οι αλγόριθμοι
υπερτερούν χρονικά του Brute Force Algorithm κατά πολύ,ειδικά οι Graph Based αλγόριθμοι,που είναι σχεδόν 20 φορές πιο γρήγοροι.Ως προς την προσέγγιση των αποστάσεων των γειτόνων,παρατηρούμε πως ο MRNG
βρίσκει τις πραγματικές,χρειάζεται όμως πολύ χρόνο ώστε να χτίσει τον γράφο,ενώ οι υπόλοιποι προσεγγίζουν αρκετά ικανοποιητικά τις πραγματικές αποστάσεις με πολύ μικρότερο κόστος κατασκευής.Συνεπώς σε 
αρκετά μεγαλύτερα Datasets,ενώ ο MRNG θα προσεγγίσει με απόλυτη ακρίβεια τους πραγματικούς γείτονες ενός query point,έχει πολύ μεγαλύτερη χρονική από όλους τους υπόλοιπους αλγορίθμους,ως προς την κατασκευή του.
Από την άλλη ο GNNS που θα μικρότερη χρονική πολυπλοκότητα κατασκευής ,θα έχει απόκλιση ως προς την προσέγγιση των γειτόνων ενός query point ,και οι αλγόριθμοι LSH και Hypercube που είναι οι πιο γρήγοροι ως
προς την κατασκευή,ο ένας έχει μεγαλύτερες αποκλίσεις ως προς την προσέγγιση των γειτόνων,και άλλος χρονικά.Τελικά συμπεραίνουμε πως ο κάθε αλγόριθμος παρουσιάζει κάποια θετικά και κάποια αρνητικά,όπου ανάλογα
τις ανάγκες της εκάστοτε υλοποίησης ,η βέλιστη επιλογή διαφέρει.